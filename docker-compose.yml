services:
  db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - kc_db:/var/lib/postgresql/data
      - ./backup/seed:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak-local
    command: [ "start-dev" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
    volumes:
      - ./realm:/opt/keycloak/data/import
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db-backup:
    image: postgres:16
    container_name: keycloak-db-backup
    depends_on:
      db:
        condition: service_healthy
    environment:
      BACKUP_INTERVAL_SECONDS: "3600"
      PGPASSWORD: keycloak
    volumes:
      - ./backup:/backup
    entrypoint: ["/bin/bash","-lc"]
    command: >
      set -e;
      echo "*:*:*:keycloak:keycloak" > /root/.pgpass;
      chmod 600 /root/.pgpass;
      while true; do
        ts=$(date +%F_%H-%M-%S);
        pg_dump -h db -U keycloak keycloak > /backup/keycloak_latest.sql;
        pg_dump -h db -U keycloak keycloak | gzip > /backup/keycloak_latest.sql.gz;
        pg_dump -h db -U keycloak keycloak | gzip > /backup/keycloak_${ts}.sql.gz;
        echo "${ts}" > /backup/last_backup.txt;
        sleep ${BACKUP_INTERVAL_SECONDS:-3600};
      done
    restart: unless-stopped

  seed-sync:
    image: alpine:3.20
    container_name: keycloak-seed-sync
    depends_on:
      - db-backup
    volumes:
      - ./backup:/backup
    entrypoint: ["/bin/sh","-lc"]
    command: >
      set -eu;
      mkdir -p /backup/seed;
      while true; do
        if [ -f /backup/keycloak_latest.sql.gz ]; then
          if [ ! -f /backup/seed/keycloak_seed.sql.gz ] ||
             [ /backup/keycloak_latest.sql.gz -nt /backup/seed/keycloak_seed.sql.gz ]; then
            cp -f /backup/keycloak_latest.sql.gz /backup/seed/keycloak_seed.sql.gz;
            echo "seed updated at $(date +%F_%T)" > /backup/seed/.last_seed_sync.txt;
          fi
        fi
        sleep 60;
      done
    restart: unless-stopped

volumes:
  kc_db:
